@model List<ProductModel>
<link rel="stylesheet" href="/modules/owl.carousel/dist/assets/owl.carousel.min.css">
<link rel="stylesheet" href="/modules/owl.carousel/dist/assets/owl.theme.default.min.css">

<div id="sync2" class="owl-carousel owl-theme m-1 mt-3">
    @for (int i = 0; i < Model.Count(); i++)
    {
        <div>

            <div class="card me-3 shadow p-3 bg-white rounded justify-content-center" style="height:22rem;">
                <div>
                    <img class="card-img" src="~/img/@Model[i].HomeImageUrl">

                </div>
                <div class="card-body bottomAlign">
                    <h5 class="card-title">@Model[i].Name</h5>
                    <a href="/product/details/@Model[i].Id" class="btn btn-primary">Detail</a>
                </div>
            </div>
            
          </div>
          
       }
    
</div>


<div id="sync1" class="owl-carousel owl-theme me-3 mt-3 ">
    @for (int i = 0; i < Model.Count(); i++)
    {
        <div>
            <div class="card shadow bg-white rounded">
                <div class="card-body p-1 text-center">
                    <div class="row d-flex align-items-center">
                        <div class="col-md-4">
                            <h3 class="card-title">@Model[i].Price &#8378</h3>
                        </div>
                        @*<div class="col-md-1"><div style="border-left: 2px solid green;height:80px;"></div></div>*@
                        <div class="col-md-4 ">
                            <h5 class="card-title">@Model[i].Name</h5>
                            
                        </div>
                        <div class="col-md-4">
                            <p class="card-text">@Html.Raw(Model[i].Description)</p>
                            
                        </div>
                        
                    </div>
                 </div>
             </div>
          </div>

    }

</div>

<script src="/modules/owl.carousel/dist/owl.carousel.min.js"></script>
<script>
    $(document).ready(function () {

        var sync1 = $("#sync1");
        var sync2 = $("#sync2");
        var slidesPerPage = 5; //globaly define number of elements per page
        var syncedSecondary = true;

        sync1.owlCarousel({
            items: 1,
            slideSpeed: 2000,
            autoplayHoverPause: true,
            nav: false,
            autoplay: true,
            dots: true,
            loop: true,
            rtl: true,
            responsiveRefreshRate: 200,
            navText: ['<i class="catch fa fa-angle-right"></i>', '<i class="catch fa fa-angle-left"></i>'],
        }).on('changed.owl.carousel', syncPosition);

        sync2
            .on('initialized.owl.carousel', function () {
                sync2.find(".owl-item").eq(0).addClass("current").children().children().addClass("border-danger");
            })
            .owlCarousel({
                items: slidesPerPage,
                dots: false,
                nav: false,
                smartSpeed: 200,
                slideSpeed: 500,
                slideBy: 1, //alternatively you can slide by 1, this way the active slide will stick to the first item in the second carousel
                rtl: true,
                responsiveRefreshRate: 100
            }).on('changed.owl.carousel', syncPosition2);

        function syncPosition(el) {
            //if you set loop to false, you have to restore this next line
            //var current = el.item.index;

            //if you disable loop you have to comment this block
            var count = el.item.count - 1;
            var current = Math.round(el.item.index - (el.item.count / 2) - .5);

            if (current < 0) {
                current = count;
            }
            if (current > count) {
                current = 0;
            }

            //end block

            sync2
                .find(".owl-item")
                .removeClass("current")
                .eq(current)
                .addClass("current");

            sync2
                .find(".owl-item").children().children().removeClass("border-danger").
                eq(current).addClass("border-danger");


            var onscreen = sync2.find('.owl-item.active').length - 1;
            var start = sync2.find('.owl-item.active').first().index();
            var end = sync2.find('.owl-item.active').last().index();

            if (current > end) {
                sync2.data('owl.carousel').to(current, 100, true);
            }
            if (current < start) {
                sync2.data('owl.carousel').to(current - onscreen, 100, true);
            }
        }

        function syncPosition2(el) {
            if (syncedSecondary) {
                var number = el.item.index;
                sync1.data('owl.carousel').to(number, 100, true);
            }
        }

        sync2.on("click", ".owl-item", function (e) {
            //e.preventDefault();
            var number = $(this).index();
            sync1.data('owl.carousel').to(number, 300, true);
        });
    });
</script>